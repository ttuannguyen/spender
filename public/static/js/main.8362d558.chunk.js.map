{"version":3,"sources":["components/Home.js","features/budgets/Budgets.js","features/budgets/BudgetsSlice.js","features/budgets/BudgetApi.js","features/expenses/ExpenseDeleteButton.js","features/expenses/Expense.js","features/expenses/ExpensesSlice.js","features/expenses/ExpensesApi.js","features/expenses/Expenses.js","features/user/UserSlice.js","features/user/UserApi.js","features/auth/Login.js","features/auth/Signup.js","features/expenses/ExpenseAddForm.js","features/expenses/ExpenseEditForm.js","features/expenses/ExpenseDetails.js","features/categories/CategoriesSlice.js","features/categories/CategoriesApi.js","features/notes/NoteDeleteButton.js","features/notes/Notes.js","features/budgets/BudgetAddForm.js","features/notes/NoteAddForm.js","features/budgets/BudgetLink.js","features/budgets/BudgetsOfUser.js","features/budgets/Budget.js","components/SearchBar.js","features/expenses/ExpenseAddForm2.js","features/budgets/BudgetEditForm.js","components/Header.js","components/Footer.js","components/LandingPage.js","App.js","reportWebVitals.js","features/counter/CounterSlice.js","features/counter/CounterApi.js","features/auth/ToggleSlice.js","redux/store.js","index.js"],"names":["Home","loggedIn","useSelector","state","user","entities","className","username","Budgets","budgetCards","name","description","map","budget","Col","sm","md","lg","xl","Card","style","width","Body","Title","Text","Row","to","fetchBudgetsAsync","createAsyncThunk","a","fetch","then","res","json","data","catch","error","alert","message","response","addBudget","formData","fetchAddBudget","method","headers","body","JSON","stringify","editBudget","params","amount","fetchEditBudget","id","addNewExpenseToBudget","fetchAddNewExpenseToBudgets","editExpense","fetchEditExpense","deleteExpense","fetchDeletetExpense","budget_id","budgetsSlice","createSlice","initialState","errors","status","budgetActionStatus","expenseActionStatus","reducers","resetBudgetErrors","resetBudgetActionStatus","resetExpenseActionStatus","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","find","b","parseInt","expenses","budgetFound","newExpenses","e","filter","actions","ExpenseDeleteButton","expense","useParams","dispatch","useDispatch","navigate","useNavigate","onClick","Expense","merchant","date","fetchExpensesAsync","addNewNoteToExpense","fetchAddNewNoteToExpense","expensesSlice","toggle","setToggle","expense_id","notes","Expenses","auth","useEffect","expensesList","fetchUserAsync","login","userObj","logout","signup","addNote","fetchAddNote","deleteNote","note","fetchDeleteNote","userSlice","noteActionStatus","reset","setLoggedOutState","resetErrors","resetNoteActionStatus","newNotes","n","addExpense","resetUser","Login","useState","setUsername","password","setPassword","Form","onSubmit","preventDefault","Group","controlId","Label","Control","type","value","onChange","target","placeholder","Button","variant","Signup","passwordConfirmation","setPasswordConfirmation","password_confirmation","ExpenseAddForm","budgets","budgetsOptions","setFormData","console","log","handleChange","htmlFor","selected","disabled","hidden","class","ExpenseEditForm","ExpenseDetails","fetchCategoriesAsync","addCategory","fetchAddCategory","addNewExpenseToCategory","fetchAddNewExpenseToCategory","categoriesSlice","resetCategoryErrors","c","category_id","user_expenses","NoteDeleteButton","size","Notes","notesList","ListGroup","Item","as","content","BudgetAddForm","Select","NoteAddForm","BudgetLink","textDecoration","BudgetsOfUser","budgetsList","Budget","expensesTotal","reduce","balance","SearchBar","searchQuery","setSearchQuery","budgetsToDisplay","toLowerCase","includes","ExpenseAddForm2","BudgetEditForm","setAmount","Header","Navbar","bg","expand","collapseOnSelect","Container","Brand","href","Toggle","Collapse","Nav","Link","Footer","LandingPage","Carousel","src","alt","Caption","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fetchRandomDogImageAsync","counterSlice","image","increment","decrement","incrementByAmount","toggleSlice","toggleState","persistConfig","key","storage","rootReducer","combineReducers","counter","counterReducer","categories","categoriesReducer","budgetsReducer","expensesReducer","userReducer","toggleReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8362d558.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from \"react-redux\";\n\nconst Home = () => {\n\n  const loggedIn = useSelector(state => state.user.loggedIn)\n  const user = useSelector(state => state.user.entities)\n  // console.log(user)\n\n  if (loggedIn) {\n    return (\n      <div className='home'>\n          <h3>Welcome, {user.username}!</h3>\n          {/* <h4>Usage Instructions</h4>\n          <h5>Keep all of your important expenses in one place with Spender!</h5>\n          <p>Go to Budgets to view a list of available budgets. Select a budget to add to your budgets list. </p>\n          <p>To create a new expense under a budget, navigate to Add Expense and fill out the add form.</p>\n          <p>Use \"My Notes\" to journal your spending habits.</p> */}\n      </div>\n    )\n  } else {\n    return (<h4>Please login or create an Account</h4>)\n  }\n\n}\n\nexport default Home","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport BudgetCard from \"./BudgetCard\";\nimport { Card, Col, Row } from \"react-bootstrap\";\n\nconst Budgets = () => {\n\n    const loggedIn = useSelector(state => state.user.loggedIn)\n    // const budgets = useSelector(state => state.budgets.entities)\n\n    const budgets = [\n        {name: 'Rent & Utilities', description: \"This budget includes all expenses related to rent payments, mortgage payments, electricity, water, gas, internet bills, etc.\"},\n        {name: 'Groceries', description: 'This budget includes all expenses related to recreational activities, such as movies, concerts, dining out, and other forms of entertainment.'},\n        {name: 'Entertainment', description: 'This budget is for leisure and recreational activities and includes expenses related to movies, concerts, dining out, hobbies, and other forms of entertainment.'},\n        {name: 'Essentials', description: 'This budget is designed to cover the basic necessities for daily usage.'},\n        {name: 'Transportation', description: 'This budget is designed to track and manage expenses related to transportation, such as Uber, Lyft, taxi and public transportation costs.'},\n        {name: 'Subscription', description: 'This budget includes expenses related to various subscriptions, such as streaming services, online memberships, and software subscriptions.'},\n        {name: 'Other', description: 'This budget includes all other expenses.'}\n    ]\n\n    if (loggedIn) {\n\n        const budgetCards = budgets.map(budget => {\n            return ( \n                <Col sm={12} md={6} lg={4} xl={3} key={budget.name}>\n                    <Card style={{ width: '18rem' }} className=\"mb-2\">\n                    <Card.Body>\n                        <Card.Title><strong>{budget.name}</strong></Card.Title>\n                        <Card.Text>{budget.description}</Card.Text>\n                    </Card.Body>\n                    </Card>\n                </Col>\n            )\n        })\n        // const budgetButtons = budgets.map(budget => <BudgetCard key={budget.id} budget={budget}/>)\n\n        return (\n            <div className=\"py-3\">\n                <Row className=\"py-3\">\n                    {budgetCards}\n                </Row>\n                {/* {budgetButtons} */}\n                <Link to={'/budgets/new'}>\n                    <button className=\"btn btn-primary\">Set A Budget</button>\n                </Link>\n            </div>\n        )   \n    }\n}\n\nexport default Budgets","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchBudgets } from \"./BudgetApi\";\n\nconst initialState = {\n    entities: [],\n    errors: null,\n    status: 'idle',\n    budgetActionStatus: 'idle',\n    expenseActionStatus: 'idle'\n}\n\nexport const fetchBudgetsAsync = createAsyncThunk(\n    'budgets/fetchBudgets',\n    async () => {\n        const response = await fetchBudgets()\n        return response\n    }\n)\n\nexport const addBudget = createAsyncThunk(\n    'budgets/addBudget', \n    async (formData) => {\n        const fetchAddBudget = () => {\n            return fetch('/budgets',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchAddBudget()\n        return response\n})\n\nexport const editBudget = createAsyncThunk(\n    'budget/editBudget',\n    async ({params, amount}) => {\n        const fetchEditBudget = () => {\n            return fetch(`/budgets/${params.id}`,{\n                method:'PATCH',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify({\"amount\": amount})\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchEditBudget()\n        return response\n    }\n)\n\n\nexport const addNewExpenseToBudget = createAsyncThunk(\n    'budgets/addNewExpenseToBudget', \n    async (formData) => {\n        const fetchAddNewExpenseToBudgets = () => {\n            return fetch('/expenses',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n\n        const response = await fetchAddNewExpenseToBudgets()\n        return response\n        // async thunk is handled with extra reducer, create a builder that responds to this case \n})\n\n\nexport const editExpense = createAsyncThunk(\n    'expenses/editExpense',\n    async ({params, formData}) => {\n        const fetchEditExpense = () => {\n            return fetch(`/expenses/${params.id}`,{\n                method:'PATCH',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchEditExpense()\n        return response\n    }\n)\n\nexport const deleteExpense = createAsyncThunk(\n    'expenses/deleteExpense',\n    async (params) => {\n        const fetchDeletetExpense = () => {\n            return fetch(`/budgets/${params.budget_id}/expenses/${params.id}`,{\n                method:'DELETE',\n                headers:{'Content-Type': 'application/json'},\n            })\n            // return fetch(`/expenses/${params.id}`,{\n            //     method:'DELETE',\n            //     headers:{'Content-Type': 'application/json'},\n            // })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchDeletetExpense()\n        return response\n    }\n)\n\nexport const budgetsSlice = createSlice({\n    name: 'budgets',\n    initialState,\n    reducers: {\n        resetBudgetErrors(state) {\n            state.errors = null\n        },\n        resetBudgetActionStatus(state) {\n            state.budgetActionStatus = 'idle'\n        },\n        resetExpenseActionStatus(state) {\n            state.expenseActionStatus = 'idle'\n        }\n    },\n\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchBudgetsAsync.pending, (state) => {\n            state.errors = null // to clear out errors at page refresh\n            state.status = 'loading'\n            state.budgetActionStatus = 'idle'\n            state.expenseActionStatus = 'idle'\n        })\n        .addCase(fetchBudgetsAsync.fulfilled, (state, action) => {\n            state.entities = action.payload\n            // state.errors = null // to clear out errors at page refresh\n            state.status = 'fulfilled'\n        })\n        .addCase(fetchBudgetsAsync.rejected, (state) => {\n            state.status = 'rejected'\n        })\n        .addCase(addBudget.pending, (state) => {\n            state.status = 'loading'\n        })\n        .addCase(addBudget.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                state.entities.push(action.payload)\n                state.errors = null\n                state.status = 'fulfilled'\n                state.budgetActionStatus = 'fulfilled'\n            }\n        })\n        .addCase(editBudget.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                const budgetFound = state.entities.find(b => b.id ===  parseInt(action.payload.id))\n                budgetFound.amount = action.payload.amount\n                state.errors = null\n                state.status = 'fulfilled'\n            }\n        })\n        .addCase(addNewExpenseToBudget.pending, (state) => {\n            state.status = 'loading'\n        })\n        .addCase(addNewExpenseToBudget.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                const budgetFound = state.entities.find(b => b.id ===  parseInt(action.payload.budget_id))\n                budgetFound.expenses.push(action.payload)\n                state.errors = null\n                state.status = 'fulfilled'\n                state.expenseActionStatus = 'fulfilled'\n            }\n        })\n        .addCase(editExpense.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                const budgetFound = state.entities.find(b => b.id ===  parseInt(action.payload.budget_id))\n                const newExpenses = budgetFound.expenses.map(e => e.id ===  parseInt(action.payload.id) ? action.payload : e)\n                budgetFound.expenses = newExpenses\n                state.errors = null\n                state.status = 'fulfilled'\n                state.expenseActionStatus = 'fulfilled'\n            }\n        })\n        .addCase(deleteExpense.fulfilled, (state, action) => {\n            const budgetFound = state.entities.find(b => b.id ===  parseInt(action.payload.budget_id))\n            const newExpenses = budgetFound.expenses.filter(e => e.id !== action.payload.id)\n            budgetFound.expenses = newExpenses\n            state.status = 'fulfilled'\n        })\n    }\n\n})\n\nexport default budgetsSlice.reducer\nexport const { resetBudgetErrors, resetExpenseActionStatus, resetBudgetActionStatus } = budgetsSlice.actions","export const fetchBudgets = () => {\n    return fetch('/budgets')\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => alert(error.message))\n}","import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\n// import { deleteExpense } from '../user/UserSlice';\nimport { deleteExpense } from '../budgets/BudgetsSlice';\n\n\nconst ExpenseDeleteButton = ({expense}) => {\n    // const { user, toggle, setToggle } = useContext(UserContext);\n    // const params = useParams();\n    const params = useParams();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // console.log(params.category_id)\n    // console.log(params.id)\n\n\n    const handleClick = () => {\n        \n        dispatch(deleteExpense(params))\n        // dispatch(deleteExpense(params))\n        \n        // Issue: Related category still rendered even when all of its expenses are deleted\n        // Solution: fetch categories after the deletion\n        // dispatch(fetchCategoriesAsync())\n\n        // Issue: The page breaks after the delete action\n        // Solution: Navigate away to My Spends\n        navigate(`/budgets/${params.budget_id}`)\n    }\n    \n    return (\n        <button className=\"btn btn-danger\" onClick={handleClick}>Delete</button>\n    )\n}\n\nexport default ExpenseDeleteButton","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ExpenseDeleteButton from './ExpenseDeleteButton';\n\nconst Expense = ({expense}) => {\n  return (\n    <div>\n      <p>{expense.merchant}</p>\n      <p>{expense.date}</p>\n      <p>{expense.amount}</p>\n      <Link to={`/expenses/${expense.id}/edit`}>\n          <button>Edit</button>\n      </Link>\n      <ExpenseDeleteButton expense={expense} />\n    </div>\n  )\n}\n\nexport default Expense","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchExpenses } from './ExpensesApi';\n\nconst initialState = {\n    entities: [],\n    errors: null,\n    status: 'idle',\n    toggle: false,\n}\n\nexport const fetchExpensesAsync = createAsyncThunk(\n    'expenses/fetchExpenses',\n    async () => {\n        const response = await fetchExpenses()\n        return response\n    }\n)\n\nexport const addNewNoteToExpense = createAsyncThunk(\n    'categories/addNewNoteToExpense', \n    async (formData) => {\n        const fetchAddNewNoteToExpense = () => {\n            return fetch('/notes',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchAddNewNoteToExpense()\n        return response\n})\n\nexport const editExpense = createAsyncThunk(\n    'expenses/editExpense',\n    async ({id, formData}) => {\n        const fetchEditExpense = () => {\n            return fetch(`/expenses/${id}`,{\n                method:'PATCH',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchEditExpense()\n        return response\n    }\n)\n\nexport const deleteExpense = createAsyncThunk(\n    'expenses/deleteExpense',\n    async (id) => {\n        const fetchDeletetExpense = () => {\n            return fetch(`/expenses/${id}`,{\n                method:'DELETE',\n                headers:{'Content-Type': 'application/json'},\n            })\n            // .then(res => res.json())\n            // .then(data => data)\n        }\n        fetchDeletetExpense()\n        // const response = await fetchDeletetExpense()\n        // return response\n    }\n)\n\nexport const expensesSlice = createSlice({\n    name: 'expenses',\n    initialState, \n    reducers: {\n        setToggle: state => {state.toggle = !state.toggle},\n        // addExpense(state, action) {\n        //     state.data.push(action.payload)\n        // },\n        // editExpense(state, action) {\n        //     const newArr = state.data.map(e => e.id === action.payload.id ? action.payload : e)\n        //     state.data = newArr\n        // },\n        // deleteExpense(state, action) {\n        //     const newArr = state.data.filter(e => e.id !== action.payload.id)\n        //     console.log(newArr)\n        //     state.data = newArr\n        // }\n    },\n    \n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchExpensesAsync.pending, (state) => {\n            state.status = 'loading'\n        })\n        .addCase(fetchExpensesAsync.fulfilled, (state, action) => {\n            state.entities = action.payload\n            state.status = 'fulfilled'\n            state.toggle = true\n        })\n        .addCase(fetchExpensesAsync.rejected, (state) => {\n            state.status = 'rejected'\n        })\n        .addCase(editExpense.fulfilled, (state, action) => {\n            const newExpenses = state.entities.map(e => e.id ===  parseInt(action.payload.id) ? action.payload : e)\n            state.entities = newExpenses\n            state.status = 'fulfilled'\n        })   \n        .addCase(addNewNoteToExpense.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                const expenseFound = state.entities.find(e => e.id ===  parseInt(action.payload.expense_id))\n                expenseFound.notes.push(action.payload)\n                state.status = 'fulfilled'\n            }\n        })\n    }\n})\n\n\nexport default expensesSlice.reducer\nexport const {setToggle} = expensesSlice.actions\n// export const {addExpense, editExpense, deleteExpense} = expensesSlice.actions","export const fetchExpenses = () => {\n    return fetch('/expenses')\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => alert(error.message))\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Expense from './Expense';\nimport { fetchExpensesAsync } from './ExpensesSlice';\n\nconst Expenses = () => {\n\n  const expenses = useSelector(state => state.expenses.data)\n  const loggedIn = useSelector(state => state.auth.loggedIn)\n  const dispatch= useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchExpensesAsync());\n  }, [dispatch]);\n\n  const expensesList = expenses.map(expense => <Expense expense={expense} />)\n\n  if (loggedIn) {\n    return (\n      <div>\n        {expensesList}\n      </div>\n    )\n  } else {\n    return (<h4>Please login or create an Account</h4>)\n  }\n\n  \n}\n\nexport default Expenses","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMe } from './UserApi';\n\nconst initialState = {\n    entities: {},\n    errors: null,\n    status: 'idle',\n    loggedIn: false,\n    noteActionStatus: 'idle'\n}\n\nexport const fetchUserAsync = createAsyncThunk(\n    'user/fetchMe',\n    async () => {\n        const response = await fetchMe()\n        return response\n    }\n)\n\n// export const login = (userObj) => {\n//     fetch('/login', {\n//         method:'POST',\n//         headers:{'Content-Type': 'application/json'},\n//         body:JSON.stringify(userObj) \n//     })\n//     .then(res => res.json())\n//     .then(data => data)\n// }\n\nexport const login = createAsyncThunk(\n    'user/login', \n    async (userObj) => {\n    return fetch('/login', {\n        method:'POST',\n        headers:{'Content-Type': 'application/json'},\n        body:JSON.stringify(userObj) \n    })\n    .then(res => res.json()) \n})\n\n\n// export const login = createAsyncThunk('user/login', async (userObj) => {\n//     return fetch('/login', {\n//         method:'POST',\n//         headers:{'Content-Type': 'application/json'},\n//         body:JSON.stringify(userObj) \n//     })\n//     .then(res => res.json()) \n//     // .then(data => data)\n// })\n\nexport const logout = createAsyncThunk('user/logout', async() => {\n    return fetch('/logout', {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n    })\n    .then(res => res.json()) \n})\n    \n\n\nexport const signup = createAsyncThunk('user/signup', async (userObj) => {\n    return fetch('/signup', {\n        method:'POST',\n        headers:{'Content-Type': 'application/json'},\n        body:JSON.stringify(userObj) \n    })\n    .then(res => res.json()) \n    // .then(userObj => userObj)\n})\n\nexport const editExpense = createAsyncThunk(\n    'user/editExpense',\n    async ({id, formData}) => {\n        const fetchEditExpense = () => {\n            return fetch(`/expenses/${id}`,{\n                method:'PATCH',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchEditExpense()\n        return response\n    }\n)\n\nexport const deleteExpense = createAsyncThunk(\n    'user/deleteExpense',\n    async (id) => {\n        const fetchDeletetExpense = () => {\n            return fetch(`/expenses/${id}`,{\n                method:'DELETE',\n                headers:{'Content-Type': 'application/json'},\n                // body:JSON.stringify(formData)\n            })\n            // .then(res => res.json())\n            // .then(data => data)\n        }\n        fetchDeletetExpense()\n        // const response = await fetchDeletetExpense()\n        // return response\n    }\n)\n\nexport const addNote = createAsyncThunk(\n    'user/addNote', \n    async (formData) => {\n        const fetchAddNote = () => {\n            return fetch('/notes',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchAddNote()\n        return response\n})\n\nexport const deleteNote = createAsyncThunk(\n    'user/deleteNote', \n    async (note) => {\n        const fetchDeleteNote = () => {\n            return fetch(`/notes/${note.id}`,{\n                method:'DELETE',\n                headers:{'Content-Type': 'application/json'},\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchDeleteNote()\n        return response\n})\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        // addExpense(state, action) {\n        //     state.entities.expenses.push(action.payload)\n        // },\n        // addNote(state, action) {\n        //     state.entities.notes.push(action.payload)\n        // },\n        reset(state) {\n            state.entities = {}\n        },\n        setLoggedOutState(state) {\n            state.loggedIn = false\n        },\n        resetErrors(state) {\n            state.errors = null\n        },\n        resetNoteActionStatus(state) {\n            state.noteActionStatus = 'idle'\n        },\n\n    },\n\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchUserAsync.pending, (state) => {\n            state.status = 'loading'\n            state.errors = null // reset errors at page refresh\n        })\n        .addCase(fetchUserAsync.fulfilled, (state, action) => {\n            state.entities = action.payload\n            state.status = 'fulfilled'\n            state.errors = null \n        })\n        .addCase(fetchUserAsync.rejected, (state) => {\n            state.status = 'rejected'\n        })\n        .addCase(login.pending, (state) => {\n            state.status = 'loading'\n            state.errors = null // reset errors at page refresh\n        })\n        .addCase(login.fulfilled, (state, action) => {\n            state.status = 'fulfilled'\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n                // state.loginErrors = action.payload.errors\n            } else {\n                state.loggedIn = true\n                state.errors = null\n                // state.loginErrors = null\n                state.entities = action.payload\n            }\n        })\n        .addCase(logout.fulfilled, (state) => {\n            state.status = 'fulfilled'\n            state.entities = {}\n            state.errors = null\n            state.loggedIn = false\n        })\n        .addCase(login.rejected, (state) => {\n            state.status = 'rejected'\n        })\n        .addCase(signup.fulfilled, (state, action) => {\n            state.status = 'fulfilled'\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n                // state.signupErrors = action.payload.errors\n            } else {\n                state.loggedIn = true\n                state.errors = null\n                // state.signupErrors = null\n                state.entities = action.payload\n            }\n        })\n        // CRUD Actions Using User Slice\n        .addCase(editExpense.fulfilled, (state, action) => {\n            const newExpenses = state.entities.expenses.map(e => e.id ===  parseInt(action.payload.id) ? action.payload : e)\n            state.entities.expenses = newExpenses\n            state.status = 'fulfilled'\n        })   \n\n        .addCase(addNote.fulfilled, (state, action) => {\n            // const newExpenses = state.entities.expenses.map(e => e.id ===  parseInt(action.payload.id) ? action.payload : e)\n            // state.entities.expenses = newExpenses\n            if (action.payload.errors) {\n                // state.noteErrors = action.payload.errors\n                state.errors = action.payload.errors\n            } else {\n                state.entities.notes.push(action.payload)\n                state.errors = null\n                state.noteActionStatus = 'fulfilled'\n            }\n        })   \n        .addCase(deleteNote.fulfilled, (state, action) => {\n            const newNotes = state.entities.notes.filter(n => n.id !== action.payload.id)\n            state.entities.notes = newNotes\n            state.noteActionStatus = 'fulfilled'\n        })   \n\n    }\n})\n\n\nexport default userSlice.reducer\nexport const { addExpense, setLoggedOutState, reset, resetErrors, resetUser, resetNoteActionStatus } = userSlice.actions","export const fetchMe = () => {\n    return fetch('/me')\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => alert(error.message))\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../user/UserSlice';\nimport { Button, Form } from 'react-bootstrap';\n\nconst Login = () => {\n  \n  // Current Issue: Not navigating to /home right away after a successful login\n  \n  // Issue: Error messages keep persisting because errors are saved in global state\n  // Solution 1: make a state var for login-related error messages\n  // Solution 2: send command to user slice to reset errors - unsuccessful so far\n  // Solution 3: make the post fetch and display errors in this component as all we need is the presence of the user to login; we don't necessarily need to save errors in global state\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // const [errorMessages, setErrorMessages] = useState([]);\n  // const loggedIn = useSelector(state => state.user.loggedIn)\n  const user = useSelector(state => state.user.entities);\n  const errors = useSelector(state => state.user.errors);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  \n  const userObj = {\n    username,\n    password, \n  }\n\n  useEffect(() => {\n    if (user.id && !user.errors) {\n      navigate('/budgets')\n    } \n  }, [user, navigate])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(login(userObj))\n  }\n\n  // fetch('/login',{\n  //   method:'POST',\n  //   headers:{'Content-Type': 'application/json'},\n  //   body:JSON.stringify(userObj)\n  // })\n  // .then(res => res.json())\n  // .then(user => {\n  //     if(user.errors) {\n  //       errorMessages(user.errors)\n  //       setUsername('')\n  //       setPassword('')\n  //   } else {\n  //       login(user)\n  //       navigate('/')\n  //   }\n  // })\n\n\n  return (\n    \n    <div id='login' className='my-3'> \n      {/* <form onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} /><br/>\n        <label>Password</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /><br/>\n        <button type=\"submit\">Login</button>\n      </form> */}\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Enter username\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Enter password\" />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n\n\n      {/* \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      </form> */}\n\n      {/* {errorMessages?.map(error => <p key={error}>{error}</p>)} */}\n      {errors?.map(error => <p key={error}>{error}</p>)}\n    </div>\n  ) \n}\n\nexport default Login","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport { signup } from '../user/UserSlice';\nimport { Button, Form } from 'react-bootstrap';\n\nconst Signup = () => {  \n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    // const [errorMessages, setErrorMessages] = useState([]);\n    const user = useSelector(state => state.user.entities);\n    const errors = useSelector(state => state.user.errors);\n    // const errors = useSelector(state => state.user.signupErrors);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // console.log(user)\n    // console.log(errors)\n\n    const userObj = {\n        username,\n        password,\n        password_confirmation: passwordConfirmation\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(signup(userObj))\n        \n        // if (errors) {\n        //     // setErrorMessages(errors)\n        //     setUsername('')\n        //     setPassword('')\n        //     setPasswordConfirmation('')\n        // } else {\n        //     navigate('/home')\n        // }\n    }\n\n    if (user.id && !errors) { \n      navigate('/home')\n    }\n\n\n    return (\n        <div id='signup' className='my-3'> \n\n        {/* <form onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}/><br/>\n        <label>Password</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/><br/>\n        <label>Password Confirmation</label>\n        <input type=\"password\" value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)}/><br/>\n        <button type=\"submit\">Sign up!</button>\n      </form> */}\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Enter username\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Enter password\" />\n          </Form.Group>\n\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" id='passwordConfirmation' value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)} placeholder=\"Enter password confirmation\" />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n              Submit\n          </Button>\n        </Form>\n\n\n        {/* <form onSubmit={handleSubmit}>\n          <div className='form-group'>\n            <label htmlFor='username'>Username</label>\n            <input type=\"text\" className='form-control' id='username' value={username} onChange={(e) => setUsername(e.target.value)}/><br/>\n          </div>\n          <div className='form-group'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' className='form-control' id='password' value={password} onChange={(e) => setPassword(e.target.value)}/><br/>\n          </div>\n          <div className='form-group'>\n            <label htmlFor='passwordConfirmation'>Password Confirmation</label>\n            <input type='password' className='form-control' id='passwordConfirmation' value={passwordConfirmation} onChange={(e) => setPasswordConfirmation(e.target.value)}/><br/>\n          </div>\n          <button className='btn btn-primary' type=\"submit\">Sign up!</button>\n        </form> */}\n\n        {/* {errorMessages?.map(error => <p key={error}>{error}</p>)} */}\n        \n        {errors?.map(error => <p key={error}>{error}</p>)}\n\n    </div>\n    )\n}\n\nexport default Signup","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// import { addNewExpenseToCategory } from '../categories/CategoriesSlice';\nimport { addNewExpenseToBudget } from '../budgets/BudgetsSlice';\n\nconst ExpenseAddForm = () => {\n    \n    const errors = useSelector(state => state.budgets.errors);    \n    const dispatch = useDispatch();\n    \n    // const [errorsList, setErrorsList] = useState([]);\n    const budgets = useSelector(state => state.budgets.entities)\n    const status = useSelector(state => state.budgets.status)\n    const expenses = useSelector(state => state.budgets.expenses)\n    const loggedIn = useSelector(state => state.user.loggedIn)\n    const navigate = useNavigate();\n    // const toggle = useSelector(state => state.expenses.toggle);\n    // const [formFlag, setFormFlag] = useState(false)\n    // const [count, setCount] = useState(null)\n    \n\n    // useEffect(() => {\n    //     if (!errors) {\n    //         setFormData({\n    //             ...formData,\n    //             merchant:'',\n    //             date:'',   \n    //             amount:'',\n    //             category_id:'',\n    //         })   \n    //         // setFormData(true)\n    //         navigate('/my_spends')\n    //     } else {\n    //         setFormFlag(true)\n    //     }\n    //   }, []);\n\n    // useEffect(() => {\n    //     if (!formFlag && !!errors) {\n    //         setFormData({\n    //             ...formData,\n    //             merchant:'',\n    //             date:'',   \n    //             amount:'',\n    //             category_id:'',\n    //         })   \n    //         // setFormData(true)\n    //         navigate('/my_spends')\n    //     } else {\n    //         setFormFlag(true)\n    //     }\n    //   }, [formFlag, expenses, navigate]);\n      \n      //&& errors.length === 0\n    \n    // useEffect(() => {\n    //     setCount(expenses.length)\n    // }, [])\n\n    // useEffect(() => {\n    //     if (expenses.length !== count) {\n    //         setFormData({\n    //             ...formData,\n    //             merchant:'',\n    //             date:'',   \n    //             amount:'',\n    //             category_id:'',\n    //         })   \n    //         // setFormData(true)\n    //         navigate('/my_spends')\n    //     }\n    //   }, [expenses]);\n\n    // const categoriesOptions = categories.map(c => <option value={c.id} key={c.id}>{c.name}</option>)\n    const budgetsOptions = budgets.map(b => <option value={b.id} key={b.id}>{b.name}</option>)\n\n    const [formData, setFormData] = useState({\n        merchant:'',\n        date:'',   \n        amount:'',\n        budget_id:'',\n    });\n    console.log(formData)\n\n    const handleChange = (e) => {\n        setFormData(formData => {\n            return {...formData, [e.target.name]:e.target.value}\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addNewExpenseToBudget(formData))\n\n        setFormData({\n            ...formData,\n            merchant:'',\n            date:'',   \n            amount:'',\n            // category_id:'',\n        })   \n\n        // dropdown()\n        \n        // setFormFlag(true)\n        // if (!errors) {\n        //     navigate('/my_budgets')\n        // }\n    }\n\n    // # of expenses ; if the # changes, navigate \n\n    // function reset() {\n    //     const text = document.getElementById(\"none\").defaultValue;\n    // }\n\n    // const dropdown = () => {\n    //     return (\n    //         <select name='category_id' onChange={handleChange}>\n    //             <option value=\"none\" id=\"none\" selected=\"selected\"> -- select an option -- </option>\n    //             {categoriesOptions}`\n    //         </select>\n    //     )\n    // }\n\n    if (loggedIn) {\n        return (\n            <div id='expense-add-form'>\n                <h4>Add an Expense</h4>\n                <form onSubmit={handleSubmit}>\n                    <div className='form-group'>\n                        <label htmlFor='merchant'>Merchant</label>\n                        <input type='text' className='form-control' id='merchant' name='merchant' value={formData.merchant} onChange={handleChange} /><br/>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='date'>Date</label>\n                        <input type='text' className='form-control' id='date' name='date' value={formData.date} onChange={handleChange} /><br/>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='amount'>Amount</label>\n                        <input type='text' className='form-control' id='amount' name='amount' value={formData.amount} onChange={handleChange} /><br/>\n                    </div>\n       \n                    <div className='dropdown'> \n                        <label>Budget:</label>\n                        {/* TO DO: Reset dropdown after submit */}\n                        <select name='budget_id' onChange={handleChange}>\n                            <option value=\"none\" id=\"none\" selected disabled hidden> -- select an option -- </option>\n                            {budgetsOptions}\n                        </select>\n                        {/* {dropdown()} */}\n                    </div>\n                    <button type=\"submit\" class='btn btn-primary'>Add!</button>\n                </form>\n                {errors?.map(error => <p key={error}>{error}</p>)}\n            </div>\n      )\n    } else {\n        return (<h4>Please login or create an Account</h4>)    \n    }\n}\n\nexport default ExpenseAddForm","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { editExpense, resetExpenseActionStatus } from '../budgets/BudgetsSlice';\n\nconst ExpenseEditForm = () => {\n\n    const loggedIn = useSelector(state => state.user.loggedIn);\n    const errors = useSelector(state => state.budgets.errors);    \n    const budgets = useSelector(state => state.budgets.entities);\n    // const budgets2 = useSelector(state => state.budgets);\n    // console.log(budgets2)\n    const expenseActionStatus = useSelector(state => state.budgets.expenseActionStatus)\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if(expenseActionStatus === 'fulfilled') {\n            navigate(`/budgets/${params.budget_id}`)\n            dispatch(resetExpenseActionStatus())\n        }\n    }, [expenseActionStatus, navigate])\n\n\n    const dispatch = useDispatch();\n    // const params = useParams(); \n    const params = useParams();\n\n    const budget = budgets.find(b => b.id === parseInt(params.budget_id));\n    const expense = budget.expenses.find(e => e.id === parseInt(params.id));\n\n\n    const [formData, setFormData] = useState({\n        merchant: expense.merchant,\n        date: expense.date,   \n        amount: expense.amount,\n        budget_id: params.budget_id\n    });\n    // console.log(formData)\n\n    const handleChange = (e) => {\n        setFormData(formData => {\n            return {...formData, [e.target.name]:e.target.value}\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(editExpense({params, formData}))\n    }\n\n    if (loggedIn) {\n        return (\n            <div className='expense-edit-form'>\n                <h4>Expense Edit Form ⬇️</h4><br/>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor='merchant'>Merchant</label>\n                        <input type=\"text\"  className=\"form-control\" name='merchant' value={formData.merchant} onChange={handleChange} /><br/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"form-group\">Date</label>\n                        <input type=\"text\" className=\"form-control\" name='date' value={formData.date} onChange={handleChange} /><br/>    \n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"form-group\">Amount</label>\n                        <input type=\"text\" className=\"form-control\" name='amount' value={formData.amount} onChange={handleChange} /><br/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n                </form>\n                {errors?.map(error => <p key={error}>{error}</p>)}\n            </div>\n        )\n    } else {\n        return (<h4>Please login or create an Account</h4>)\n    }\n}\n\nexport default ExpenseEditForm","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Link, useParams } from 'react-router-dom';\nimport ExpenseDeleteButton from './ExpenseDeleteButton';\n\n\nconst ExpenseDetails = () => {\n\n    const params = useParams();\n    const loggedIn = useSelector(state => state.user.loggedIn);\n    // const dispatch = useDispatch();\n    // const [expense, setExpense] = useState({});\n    // const [notes, setNotes] = useState([]);\n    \n    // METHOD 1: Render using expenses' data\n    // Issue: Expenses state is not updated after new expense gets added. Expenses state is a depended state.\n    // Solution: Fetch expenses after a new expense has been added\n\n    const budgets = useSelector(state => state.budgets.entities);\n    const budget = budgets.find(b => b.id === parseInt(params.budget_id));\n    // note: we can extract the category_id from the params\n    console.log(budget)\n\n    const expense = budget.expenses.find(e => e.id === parseInt(params.id));\n\n\n    // const expenses = useSelector(state => state.expenses.entities);\n    // const expense = expenses.find(e => e.id === parseInt(params.id));\n    // console.log(expenses)\n\n    // const notesList = expense.notes.map(note => <p>{note.content}</p>)\n    \n    // const findVisit = () => {\n    //     const eFound = expenses.find(e => e.id === parseInt(params.id));\n    //     if (!eFound) {\n    //         dispatch(fetchExpensesAsync())\n    //         const exp = expenses.find(e => e.id === parseInt(params.id))\n    //         setExpense(exp)\n    //     } else {\n    //         setExpense(eFound)\n    //     }\n    // }\n    // findVisit()\n    \n    // METHOD 2: Render using user's data\n    // const user = useSelector(state => state.user.data);\n    // const expense = user.expenses.find(e => e.id === parseInt(params.id))\n\n    // METHOD 3: Render using categories' data - more complicated\n    // Approach: iterate through each category, iterate through each expense in that category, look for the expense matching the id, return that expense\n    // const categories = useSelector(state => state.categories.entities);\n    // categories.map(category => {\n    //     category.user_expenses.map(expense => console.log(expense))\n    // })    \n\n    // let notesList = null\n    // if (expense) {\n    //     notesList = expense.notes.map(n => <p>{n.content}</p>)\n    // } else {\n    //     return <div>Loading ...</div>\n    // }\n\n    // if (!expense) {\n    //     return <div>Loading ...</div>\n    // }\n\n    if (loggedIn) {\n        return (\n            <div className='expense-show-page'>\n                <h3>Merchant: {expense.merchant}</h3>\n                <h4>Date: {expense.date}</h4>\n                <h5>Amount: ${expense.amount}</h5>\n                <Link to={`/budgets/${params.budget_id}/expenses/${params.id}/edit`}>\n                    <button className=\"btn btn-primary\">Edit</button>\n                </Link>\n                <ExpenseDeleteButton />\n            </div>\n        )\n    } else {\n        return (<h4>Please login or create an Account</h4>) \n    }\n\n}\n\nexport default ExpenseDetails","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchCategories } from \"./CategoriesApi\";\n\nconst initialState = {\n    entities: [],\n    errors: null,\n    status: 'idle'\n}\n\n// console.log(initialState.data)\n\nexport const fetchCategoriesAsync = createAsyncThunk(\n    'categories/fetchCategories',\n    async () => {\n        const response = await fetchCategories()\n        return response\n    }\n)\n\nexport const addCategory = createAsyncThunk(\n    'categories/addCategory', \n    async (formData) => {\n        const fetchAddCategory = () => {\n            return fetch('/categories',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n        const response = await fetchAddCategory()\n        return response\n})\n\nexport const addNewExpenseToCategory = createAsyncThunk(\n    'categories/addNewExpenseToCategory', \n    async (formData) => {\n        const fetchAddNewExpenseToCategory = () => {\n            return fetch('/expenses',{\n                method:'POST',\n                headers:{'Content-Type': 'application/json'},\n                body:JSON.stringify(formData)\n            })\n            .then(res => res.json())\n            .then(data => data)\n        }\n\n        const response = await fetchAddNewExpenseToCategory()\n        return response\n        // async thunk is handled with extra reducer, create a builder that responds to this case \n})\n\n\n// export const deleteExpense = createAsyncThunk(\n//     'expenses/deleteExpense',\n//     async (params) => {\n//         const fetchDeletetExpense = () => {\n//             return fetch(`/expenses/${params.id}`,{\n//                 method:'DELETE',\n//                 headers:{'Content-Type': 'application/json'},\n//             })\n//             .then(res => res.json())\n//             .then(data => data)\n//         }\n//         // fetchDeletetExpense()\n//         const response = await fetchDeletetExpense()\n//         return response\n//     }\n// )\n\n\nexport const categoriesSlice = createSlice({\n    name: 'categories',\n    initialState,\n    reducers: {\n        // addCategory(state, action) {\n        //     state.entities.push(action.payload)\n        //     //action.payload refers to the new category that is being pushed into the state arr\n        // }\n        resetCategoryErrors(state) {\n            state.errors = null\n        }\n    },\n\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchCategoriesAsync.pending, (state) => {\n            state.errors = null // to clear out errors at page refresh\n            state.status = 'loading'\n        })\n        .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n            state.entities = action.payload\n            // state.errors = null // to clear out errors at page refresh\n            state.status = 'fulfilled'\n        })\n        .addCase(fetchCategoriesAsync.rejected, (state) => {\n            state.status = 'rejected'\n        })\n        .addCase(addCategory.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                state.entities.push(action.payload)\n                state.errors = null\n                state.status = 'fulfilled'\n            }\n        })\n        .addCase(addNewExpenseToCategory.pending, (state) => {\n            state.status = 'loading'\n        })\n        .addCase(addNewExpenseToCategory.fulfilled, (state, action) => {\n            if (action.payload.errors) {\n                state.errors = action.payload.errors\n            } else {\n                const categoryFound = state.entities.find(c => c.id ===  parseInt(action.payload.category_id))\n                categoryFound.user_expenses.push(action.payload)\n                state.errors = null\n                state.status = 'fulfilled'\n            }\n        })\n        // .addCase(deleteExpense.fulfilled, (state, action) => {\n        //     const categoryFound = state.entities.find(c => c.id ===  parseInt(action.payload.category_id))\n        //     const newExpenses = categoryFound.user_expenses.filter(e => e.id !== action.payload.id)\n        //     categoryFound.user_expenses = newExpenses\n        //     state.status = 'fulfilled'\n        // })\n    }\n})\n\n\nexport default categoriesSlice.reducer\nexport const { resetCategoryErrors } = categoriesSlice.actions\n","export const fetchCategories = () => {\n    return fetch('/categories')\n    .then(res => res.json())\n    .then(data => data)\n    .catch(error => alert(error.message))\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { deleteNote, resetNoteActionStatus } from '../user/UserSlice';\nimport { Button } from 'react-bootstrap';\n\nconst NoteDeleteButton = ({note}) => {\n    // const { user, toggle, setToggle } = useContext(UserContext);\n\n    const noteActionStatus = useSelector(state => state.user.noteActionStatus);\n    const params = useParams();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // useEffect(() => {\n    //     if(noteActionStatus === 'fulfilled') {\n    //         dispatch(resetNoteActionStatus())\n    //     }\n    // }, [noteActionStatus])\n\n    const handleClick = () => {\n        dispatch(deleteNote(note))\n        // dispatch(resetNoteActionStatus())\n        // navigate('/notes')\n    }\n    \n    return (\n        <Button variant=\"light\" size=\"sm\" onClick={handleClick}>Delete</Button>\n    )\n}\n\nexport default NoteDeleteButton","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ListGroup } from 'react-bootstrap';\nimport NoteDeleteButton from './NoteDeleteButton';\nimport { resetBudgetActionStatus } from '../budgets/BudgetsSlice';\nimport { resetNoteActionStatus } from '../user/UserSlice';\n\n\nconst Notes = () => {\n\n    const user = useSelector(state => state.user.entities)\n    console.log(user.notes)\n    const loggedIn = useSelector(state => state.user.loggedIn)\n    const dispatch = useDispatch();\n\n    const noteActionStatus = useSelector(state => state.user.noteActionStatus);\n    console.log(noteActionStatus)\n\n    useEffect(() => {\n        if(noteActionStatus === 'fulfilled') {\n            dispatch(resetNoteActionStatus())\n        }\n    }, [noteActionStatus])\n\n    \n    if (loggedIn) {\n        const notesList = user.notes.map(note => {\n        return (\n\n            <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\" key={note.id}>\n                {note.content}\n                <NoteDeleteButton note={note}/>\n            </ListGroup.Item>\n            \n            // Link to note show page\n            // <Link to={`/notes/${note.id}`} style={{ textDecoration: 'none'}}>\n            //     <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\" key={note.id}>\n            //     {note.content}\n            // </ListGroup.Item>\n            // </Link>\n        )\n        })\n        \n        return (\n            <div>\n                <div className='notebook'>\n                    <h3>Keep track of your spending habits...</h3>\n                <ListGroup className='my-3'>\n                    {notesList}\n                </ListGroup>\n                </div>\n                <div className='add-note'>\n                    <Link to={'/notes/new'}>  \n                        <button className=\"btn btn-secondary\">Add a Note</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    } else {\n        return (<h4>Please login or create an Account</h4>)\n    }\n    \n}\n\nexport default Notes","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addBudget, resetBudgetActionStatus } from './BudgetsSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nconst BudgetAddForm = () => {\n\n    const dispatch = useDispatch()\n    // const budgets = useSelector(state => state.budgets.entities)\n    const budgets = ['Rent & Utilities', 'Groceries', 'Entertainment', 'Essentials', 'Transportation', 'Subscriptions', 'Other']\n    const errors = useSelector(state => state.budgets.errors)\n    const loggedIn = useSelector(state => state.user.loggedIn)\n    const budgetActionStatus = useSelector(state => state.budgets.budgetActionStatus)\n    const navigate = useNavigate()\n\n    // console.log(errors)\n\n    useEffect(() => {\n        if(budgetActionStatus === 'fulfilled') {\n            navigate('/my_budgets')\n            dispatch(resetBudgetActionStatus())\n        }\n    }, [budgetActionStatus, navigate])\n    \n    const budgetsOptions = budgets.map(b => <option key={b}>{b}</option>)\n\n    const [formData, setFormData] = useState({\n        name:'',\n        amount:''\n    });\n    \n    console.log(formData)\n\n    const handleChange = (e) => {\n        setFormData(formData => {\n            return {...formData, [e.target.name]:e.target.value}\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addBudget(formData))\n\n        // setFormData({\n        //     ...formData, \n        //     name:'',\n        //     amount:''\n        // })\n    }\n\n    if (loggedIn) {\n        return (\n            <div id='category-add'>\n                <h4>Add a Budget</h4>\n\n                <Form onSubmit={handleSubmit}>\n                    <Form.Label>Budget</Form.Label>\n                    <Form.Select aria-label=\"Default select example\" name='name' onChange={handleChange}>\n                        <option value=\"none\" selected disabled hidden>-- select a budget --</option>\n                        {budgetsOptions}\n                    </Form.Select>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Amount</Form.Label>\n                        <Form.Control name=\"amount\" value={formData.amount} onChange={handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n\n                {/* <form onSubmit={handleSubmit}>\n                    <div className='dropdown'> \n                        <label>Budget:</label>\n                        TO DO: Reset dropdown after submit\n                        <select name='name' onChange={handleChange}>\n                            <option value=\"none\" id=\"none\" selected disabled hidden> -- select an option -- </option>\n                            {budgetsOptions}\n                        </select>\n                        {dropdown()}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} /><br/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <input type=\"text\" className=\"form-control\" id=\"amount\" name=\"amount\" value={formData.amount} onChange={handleChange} /><br/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                </form> */}\n\n                <div className='my-3'>{errors?.map(error => <p key={error}>{error}</p>)}</div>\n            </div>\n        )\n    } else {\n        return (<h4>Please login or create an Account</h4>) \n    }\n}\n\nexport default BudgetAddForm","import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { addNewNoteToExpense } from '../expenses/ExpensesSlice';\nimport { addNote, resetNoteActionStatus } from '../user/UserSlice';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst NoteAddForm = () => {\n\n    const dispatch = useDispatch();\n    const loggedIn = useSelector(state => state.user.loggedIn);\n    // const errors = useSelector(state => state.user.noteErrors);\n    const errors = useSelector(state => state.user.errors);\n    const user = useSelector(state => state.user.entities);\n    const noteActionStatus = useSelector(state => state.user.noteActionStatus);\n    const navigate = useNavigate()\n\n    // console.log(user.notes.length)\n\n    useEffect(() => {\n        if(noteActionStatus === 'fulfilled') {\n            navigate('/notes')\n            // dispatch(resetNoteActionStatus())\n        }\n    }, [noteActionStatus, navigate])\n    \n    // const user = useSelector(state => state.user.data)\n    const [formData, setFormData] = useState({\n        content:''\n    });\n\n    const handleChange = (e) => {\n        setFormData(formData => {\n            return {...formData, [e.target.name]:e.target.value}\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addNote(formData))\n\n        setFormData({\n            ...formData, \n            content:''\n        })\n    }\n\n    if (loggedIn) {\n        return (\n            <div id=\"note-add-form\">\n                <h4>Let's reflect on your spending!</h4>\n                <form onSubmit={handleSubmit}>\n                    <div className='form-group'>\n                        <label htmlFor='content'>Note:</label>\n                        <textarea type=\"text\" className='form-control' id='content' name='content' value={formData.content} onChange={handleChange} /><br/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Add!</button>\n                </form>\n                {errors?.map(error => <p key={error}>{error}</p>)}\n            </div>\n    )\n    } else {\n        return (<h4>Please login or create an Account</h4>) \n    }\n    \n}\n\nexport default NoteAddForm","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst BudgetLink = ({budget}) => {\n    \n    return (\n        <div>\n            <Link className='budget-link' to={`/budgets/${budget.id}`} style={{ textDecoration: 'none'}} >\n            <span className=\"card\" style={{\"display\": \"block\"}}>\n                <h4>{budget.name}</h4>\n            </span>\n            </Link>\n        </div>\n    )\n}\n\nexport default BudgetLink","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport BudgetLink from './BudgetLink';\n\nconst BudgetsOfUser = () => {\n\n    const budgets = useSelector(state => state.budgets.entities)\n    console.log(budgets)\n    const loggedIn = useSelector(state => state.user.loggedIn)\n\n\n    if(loggedIn) {\n\n      // const filteredBudgets = budgets.filter(budget => budget.user_expenses.length !==0)\n      // const budgetsList = filteredBudgets.map(budget => <BudgetLink key={budget.id} budget={budget}/>)\n      const budgetsList = budgets.map(budget => <BudgetLink key={budget.id} budget={budget}/>)\n      // console.log(filteredBudgets)\n\n      return (\n        <div>\n          <h3>My Budgets</h3>\n          {budgetsList}\n        </div>\n      )\n    } else {\n      return (<h4>Please login or create an Account</h4>) \n    }\n}\n\nexport default BudgetsOfUser","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from 'react-router-dom'; \nimport ExpenseLink from '../expenses/ExpenseLink';\nimport { resetExpenseActionStatus } from './BudgetsSlice';\nimport { Badge, Col, ListGroup, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Budget = () => {\n\n    const params = useParams();\n    const dispatch = useDispatch();\n    const budgets = useSelector(state => state.budgets.entities);\n    const loggedIn = useSelector(state => state.user.loggedIn);\n    const budget = budgets.find(b => b.id === parseInt(params.id));\n\n    const expenseAmounts = budget.expenses.map(e => e.amount);\n    const expensesTotal = expenseAmounts.reduce((a, b) => a + b, 0);\n    const balance = budget.amount - expensesTotal;\n\n    const expensesList = budget.expenses.map(expense => {\n        return (\n        <div>\n            <Link to={`/budgets/${params.id}/expenses/${expense.id}`} style={{ textDecoration: 'none'}}>\n                <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\n                    💸 Merchant: {expense.merchant} | Date: {expense.date} | Amount: ${expense.amount}\n                    {/* <ExpenseLink key={expense.id} expense={expense} budget_id={params.id} /> */}\n                </ListGroup.Item>\n            </Link>    \n            \n        </div>)\n    })\n\n    return (\n        <div>\n            <h3><strong>{budget.name}</strong></h3>\n            <h5>Budget Total: <Link to={`/budgets/${budget.id}/edit`} style={{ textDecoration: 'none'}}>${budget.amount}</Link></h5>\n            <h5>Remaining Balance: ${balance}</h5>\n            <ListGroup className='my-3'>\n                {expensesList}\n            </ListGroup>\n            <Link to={`/budgets/${budget.id}/expenses/new`}>\n                    <button className=\"btn btn-primary\" >Add An Expense</button>\n            </Link>\n        </div>\n    )\n}\n\n//onClick={() => dispatch(resetExpenseActionStatus())}\n\nexport default Budget","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst SearchBar = () => {\n\n  const loggedIn = useSelector(state => state.user.loggedIn)\n  const budgets = useSelector(state => state.budgets.entities)\n\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // const [searchQuery, setSearchQuery] = useState({\n  //   text:''\n  // });\n\n  const handleSearch = (e) => {\n    console.log(e.target.value)\n    setSearchQuery(e.target.value)\n  }\n\n  const filteredListItems = budgets.filter(budget => budget.name.toLowerCase().includes(searchQuery.toLowerCase())) \n\n  const budgetsToDisplay = filteredListItems.map(b => <p>{b.name}</p>)\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchQuery(searchQuery => {\n          return {...searchQuery, [e.target.name]:e.target.value}\n      });\n  };\n\n  if (loggedIn) {\n    return (\n      <div>\n        <input onChange={handleSearch} type='text' placeholder=\"Search here...\" /><br/>\n        {budgetsToDisplay}\n      </div>\n      // <form onSubmit={handleSubmit}>\n      //   <input type='search' placeholder=\"Search here...\" className='form-control' id='text' name='text' value={searchInput.text} onChange={handleChange} /><br/>\n      //   <button type=\"submit\">Search</button>\n      // </form>\n    )  \n  } else {\n    return (<h4>Please login or create an account</h4>)\n  }\n  \n}\n\nexport default SearchBar","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n// import { addNewExpenseToCategory } from '../categories/CategoriesSlice';\nimport { addNewExpenseToBudget, resetExpenseActionStatus } from '../budgets/BudgetsSlice';\nimport { Button, Form } from 'react-bootstrap';\n\nconst ExpenseAddForm2 = () => {\n    \n    const params = useParams();\n    const errors = useSelector(state => state.budgets.errors);    \n    const dispatch = useDispatch();\n    \n    // const [errorsList, setErrorsList] = useState([]);\n    const budgets = useSelector(state => state.budgets.entities)\n    const expenseActionStatus = useSelector(state => state.budgets.expenseActionStatus)\n    const expenses = useSelector(state => state.budgets.expenses)\n    const loggedIn = useSelector(state => state.user.loggedIn)\n    const navigate = useNavigate();\n    \n\n    useEffect(() => {\n        if(expenseActionStatus === 'fulfilled') {\n            navigate(`/budgets/${params.budget_id}`)\n            dispatch(resetExpenseActionStatus())\n        }\n    }, [expenseActionStatus, navigate])\n\n\n    // const categoriesOptions = categories.map(c => <option value={c.id} key={c.id}>{c.name}</option>)\n    const budgetsOptions = budgets.map(b => <option value={b.id} key={b.id}>{b.name}</option>)\n\n    const [formData, setFormData] = useState({\n        merchant:'',\n        date:'',   \n        amount:'',\n        budget_id: params.budget_id\n    });\n\n    const handleChange = (e) => {\n        setFormData(formData => {\n            return {...formData, [e.target.name]:e.target.value}\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addNewExpenseToBudget(formData))\n\n        setFormData({\n            ...formData,\n            merchant:'',\n            date:'',   \n            amount:'',\n            // category_id:'',\n        })   \n\n        // dropdown()\n        \n        // setFormFlag(true)\n        // if (!errors) {\n        //     navigate('/my_budgets')\n        // }\n    }\n\n\n    if (loggedIn) {\n        return (\n            <div id='expense-add-form'>\n                <h4>Add an Expense</h4>\n\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Merchant</Form.Label>\n                        <Form.Control type=\"text\" id='merchant' name='merchant' value={formData.merchant} onChange={handleChange} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control type=\"text\" id='date' name='date' value={formData.date} onChange={handleChange} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Amount</Form.Label>\n                        <Form.Control type=\"text\" id='amount' name='amount' value={formData.amount} onChange={handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n\n                {/* <form onSubmit={handleSubmit}>\n                    <div className='form-group'>\n                        <label htmlFor='merchant'>Merchant</label>\n                        <input type='text' className='form-control' id='merchant' name='merchant' value={formData.merchant} onChange={handleChange} /><br/>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='date'>Date</label>\n                        <input type='text' className='form-control' id='date' name='date' value={formData.date} onChange={handleChange} /><br/>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='amount'>Amount</label>\n                        <input type='text' className='form-control' id='amount' name='amount' value={formData.amount} onChange={handleChange} /><br/>\n                    </div>\n                    <button type=\"submit\" class='btn btn-primary'>Add!</button>\n                </form> */}\n\n                {errors?.map(error => <p key={error}>{error}</p>)}\n\n            </div>\n      )\n    } else {\n        return (<h4>Please login or create an Account</h4>)    \n    }\n}\n\nexport default ExpenseAddForm2","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { editBudget } from './BudgetsSlice';\n\nconst BudgetEditForm = () => {\n\n    const loggedIn = useSelector(state => state.user.loggedIn);\n    const errors = useSelector(state => state.budgets.errors);    \n    const budgets = useSelector(state => state.budgets.entities);\n    \n    const [amount, setAmount] = useState('');\n    const dispatch = useDispatch();\n    const navigate = useNavigate('');\n    const params = useParams();\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(editBudget({params, amount}))\n        navigate(`/budgets/${params.id}`)\n    }\n\n    return (\n        <div className='budget-edit-form'>\n            <h3>Budget Name</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor='amount'>Amount</label>\n                    <input type='text' className='form-control' id='amount' name='amount' value={amount} onChange={e => setAmount(e.target.value)} /><br/>\n                </div>\n                <button type=\"submit\">Update</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BudgetEditForm","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport { reset, setLoggedOutState, resetErrors } from '../features/user/UserSlice';\nimport { resetCategoryErrors } from '../features/categories/CategoriesSlice';\nimport { resetBudgetErrors } from '../features/budgets/BudgetsSlice';\nimport { logout } from '../features/user/UserSlice';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\nconst Header = () => {\n\n  const loggedIn = useSelector(state => state.user.loggedIn)\n  // console.log(loggedIn)\n\n  \n  useEffect(() => {\n    navigate('/')\n  }, [loggedIn])\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const logoutUser = () => {\n    dispatch(logout());\n    dispatch(reset());\n    dispatch(resetErrors());\n    dispatch(setLoggedOutState());\n  }\n\n  if (loggedIn) {\n    return (\n        <header>\n          <Navbar bg='dark' variant='dark' expand=\"lg\" collapseOnSelect>\n            <Container>\n              <LinkContainer to='/'>\n                <Navbar.Brand href=\"/\">Spender</Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                  {/* <LinkContainer to='/home'>\n                    <Nav.Link><i className=\"fa fa-house\"></i> Home</Nav.Link>\n                  </LinkContainer> */}\n    \n                  <LinkContainer to='/budgets'>\n                    <Nav.Link type=\"submit\"  onClick={() => dispatch(resetBudgetErrors())}><i class=\"fa-solid fa-money-check-dollar\"></i> Budgets</Nav.Link>\n                  </LinkContainer>\n\n                  <LinkContainer to='/my_budgets'>\n                    <Nav.Link type=\"submit\" onClick={() => dispatch(resetBudgetErrors())}><i class=\"fa-solid fa-dollar-sign\"></i> My Budgets</Nav.Link>\n                  </LinkContainer>\n\n                  <LinkContainer to='/notes'>\n                    <Nav.Link type=\"submit\" onClick={() => dispatch(resetErrors())}><i class=\"fa-solid fa-book\"></i> My Notes</Nav.Link>\n                  </LinkContainer>\n    \n                  <LinkContainer to='/logout'>\n                    <Nav.Link type=\"submit\" onClick={logoutUser}><i className=\"fas fa-user\"></i> Logout</Nav.Link>\n                  </LinkContainer>\n              </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n    )\n  } else {\n    return (\n      <div>\n        <Navbar bg='dark' variant='dark' expand=\"lg\" collapseOnSelect>\n            <Container>\n              <LinkContainer to='/'>\n                <Navbar.Brand href=\"/\">Spender</Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                  <LinkContainer to='/login'>\n                    <Nav.Link type=\"submit\" onClick={() => dispatch(resetErrors())}><i className=\"fa fa-house\"></i> Login</Nav.Link>\n                  </LinkContainer>\n    \n                  <LinkContainer to='/signup'>\n                    <Nav.Link type=\"submit\" onClick={() => dispatch(resetErrors())}><i className=\"fas fa-user\"></i> Signup</Nav.Link>\n                  </LinkContainer>\n              </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n          \n        {/* <nav class=\"navbar navbar-light bg-light\">\n          <NavLink className='navlink' to='/login'>\n            <button class=\"btn btn-outline-success my-2 my-sm-0 m-2\" type=\"submit\" onClick={() => dispatch(resetErrors())}>Login</button>\n          </NavLink>\n          <NavLink className='navlink' to='/signup' onClick={() => dispatch(resetErrors())}>\n            <button class=\"btn btn-outline-success my-2 my-sm-0 m-2\" type=\"submit\">Signup</button>\n          </NavLink>\n        </nav> */}\n\n      </div>\n    )\n  }\n\n  // if (loggedIn) {\n  //   return (\n  //     <div>\n  //       <NavLink className='navlink' to='/home'>\n  //         <button className='nav-btn'>Home</button>\n  //       </NavLink>\n  //       <NavLink className='navlink' to='/categories' onClick={() => dispatch(resetCategoryErrors())}>\n  //         <button className='nav-btn'>All Categories</button>\n  //       </NavLink>\n  //       {/* <NavLink className='navlink' to='/expenses'>\n  //         <button className='nav-btn'>Expenses</button>\n  //       </NavLink> */}\n  //       {/* <NavLink className='navlink' to='/expenses/new' onClick={() => dispatch(resetCategoryErrors())}></NavLink> */}\n  //       <NavLink className='navlink' to='/expenses/new'>\n  //         <button className='nav-btn' >Add Expense</button>\n  //       </NavLink>\n  //       <NavLink className='navlink' to='/my_spends'>\n  //         <button className='nav-btn'>My Expenses By Category</button>\n  //       </NavLink>\n  //       <NavLink className='navlink' to='/notes'>\n  //         <button className='nav-btn' onClick={() => dispatch(resetErrors())}>My Notes</button>\n  //       </NavLink>\n  //       <button className='nav-btn' onClick={logoutUser}>Logout</button>\n  //     </div>\n  //   )\n  // } else {\n  //   return (\n  //     <div>\n  //       <NavLink className='navlink' to='/login'>\n  //         <button className='nav-btn' onClick={() => dispatch(resetErrors())}>Login</button>\n  //       </NavLink>\n  //       <NavLink className='navlink' to='/signup' onClick={() => dispatch(resetErrors())}>\n  //         <button className='nav-btn'>Signup</button>\n  //       </NavLink>\n  //     </div>\n  //   )\n  // }\n}\n\nexport default Header","import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <Container variant='primary'>\n      <Row>\n        <Col className='text-center py-3'>Copyright © 2023 Spender</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Carousel } from 'react-bootstrap'\n\nconst LandingPage = () => {\n  return (\n    <Carousel data-bs-theme=\"dark\" className='my-4'>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"https://magazine.vitality.co.uk/wp-content/uploads/2021/06/vitality_june21_Heres_why_you_suddenly_feel_so_guilty_about_spending_money_and_youre_not_alone-HERO-01.jpeg\"\n          alt=\"First slide\"\n        />\n        <Carousel.Caption>\n          <h5>Set Budgets To Manage Your Spending</h5>\n          {/* <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"https://strategyonline.ca/wp/wp-content/uploads/2020/05/onlineshoppingillustrated-623x350.png?720580\"\n          alt=\"Second slide\"\n        />\n        <Carousel.Caption>\n          <h5>Keep Track Of Your Expenses</h5>\n          {/* <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> */}\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n  )\n}\n\nexport default LandingPage","import './assets/css/App.css';\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from './components/Home';\n// import Counter from './features/counter/Counter';\nimport Budgets from './features/budgets/Budgets';\nimport Expenses from './features/expenses/Expenses';\nimport Login from './features/auth/Login';\nimport Signup from './features/auth/Signup';\nimport ExpenseAddForm from './features/expenses/ExpenseAddForm';\nimport ExpenseEditForm from './features/expenses/ExpenseEditForm';\nimport ExpenseDetails from './features/expenses/ExpenseDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategoriesAsync } from './features/categories/CategoriesSlice';\nimport { fetchBudgetsAsync } from './features/budgets/BudgetsSlice';\nimport { fetchUserAsync } from './features/user/UserSlice';\nimport { fetchExpensesAsync } from './features/expenses/ExpensesSlice';\nimport Notes from './features/notes/Notes';\nimport BudgetAddForm from './features/budgets/BudgetAddForm';\nimport NoteAddForm from './features/notes/NoteAddForm';\nimport BudgetsOfUser from './features/budgets/BudgetsOfUser';\nimport Budget from './features/budgets/Budget';\nimport SearchBar from './components/SearchBar';\nimport ExpenseAddForm2 from './features/expenses/ExpenseAddForm2';\nimport BudgetEditForm from './features/budgets/BudgetEditForm';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { Container } from 'react-bootstrap';\nimport LandingPage from './components/LandingPage';\nimport Note from './features/notes/Note';\n\nconst App = () => {\n\n  const loggedIn = useSelector(state => state.user.loggedIn);\n  const dispatch = useDispatch();\n\n  // const toggle = useSelector(state => state.expenses.toggle);\n  // console.log(toggle)\n\n  \n  useEffect(() => {\n    dispatch(fetchUserAsync());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      dispatch(fetchCategoriesAsync());\n      dispatch(fetchBudgetsAsync());\n      dispatch(fetchExpensesAsync());\n    }\n  }, [loggedIn, dispatch]);  \n  // Note: expenses is a depended state\n\n  return (\n    <div className=\"App\">\n      <Router >\n        <Header />\n        <main>\n          <Container>\n            <Routes>\n              {/* <Route path='/categories/:id' element={<CategoryDetails />} /> */}\n              {/* <Route exact path='/categories/new' element={ <CategoryAddForm /> } /> */}\n              <Route path='/budgets/:id' element={<Budget />} />\n              <Route exact path='/budgets/new' element={ <BudgetAddForm /> } />\n              <Route path='/budgets/:id/edit' element={<BudgetEditForm />} />\n              <Route exact path='/budgets' element={ <Budgets /> } />\n              <Route exact path='/my_budgets' element={<BudgetsOfUser />} />\n              <Route exact path='/expenses/new' element={ <ExpenseAddForm /> } />\n              <Route path='/budgets/:budget_id/expenses/new' element={<ExpenseAddForm2 />} />\n              <Route path='/budgets/:budget_id/expenses/:id/edit' element={<ExpenseEditForm />} />\n              <Route path='/budgets/:budget_id/expenses/:id' element={<ExpenseDetails />} />\n              {/* The route above is designed so we have the category_id and id (of expense) in order to work with data in state and extract the expense we want. We don't actually need a corresponding route in the backend. */}\n              <Route exact path=\"/expenses\" element={ <Expenses /> } />\n              {/* <Route exact path='/notes/new' element={ <NoteAddForm /> } /> */}\n              {/* <Route path='/notes/:id' element={<Note />} /> */}\n              <Route exact path='/notes/new' element={<NoteAddForm />} />\n              <Route exact path=\"/notes\" element={<Notes />} />\n              <Route exact path='/login' element={<Login />} />\n              <Route exact path='/signup' element={<Signup />} />\n              <Route exact path='/home' element={<Home /> } />\n              <Route exact path='/search' element={<SearchBar /> } />\n              <Route exact path='/' element={<LandingPage /> } />\n              {/* <Route exact path='/counter' element={<Counter /> } /> */}\n            </Routes>\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchRandomDogImage } from \"./CounterApi\";\n\n\nconst initialState = {\n    value: 0,\n    status: 'idle', // or pending is common\n    image: null // initial state for the img being retrieved\n}\n\n\n// setting up the async thunk\nexport const fetchRandomDogImageAsync = createAsyncThunk(\n    'counter/fetchRandomDogImage',\n    async () => {\n        const response = await fetchRandomDogImage()\n        return response\n        // the returned res automatically becomes the payload\n    }\n)\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    // We are defining what we actions we try to perform insider the reducers\n    reducers: {\n        increment: state => {state.value += 1}, \n        decrement: state => {state.value -=1},\n        reset: state => {state.value = 0},\n        incrementByAmount: (state, action)  => {state.value += action.payload}\n    },\n\n    // FETCHING\n    // After adding fetch function above, we need to add extra reducers\n    extraReducers: (builder) => {\n        builder\n        // reminder: the reducer always receives 2 things (state & action), which is passed into the anonymous function\n        .addCase(fetchRandomDogImageAsync.pending, (state) => {\n            state.status = 'loading'\n            // no action bc we are still waiting so we can remove the action arg\n        })\n        .addCase(fetchRandomDogImageAsync.fulfilled, (state, action) => {\n            state.image = action.payload\n            state.status = 'fulfilled'\n        })\n        .addCase(fetchRandomDogImageAsync.rejected, (state) => {\n            state.status = 'rejected'\n        })\n    }\n\n})\n\n\n\nexport default counterSlice.reducer\nexport const {increment, decrement, reset, incrementByAmount} = counterSlice.actions\n\n\n","export const fetchRandomDogImage = () => {\n    return fetch('https://dog.ceo/api/breeds/image/random')\n        .then(res => res.json())\n        .then(data => data.message)\n        .catch(error => alert(error.message)) \n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const toggleSlice = createSlice({\n    name: 'toggle',\n    initialState: {\n        toggleState: false,\n    },\n    reducers: {\n        setToggle: state => {state.toggleState = !state.toggleState},\n    }\n})\n\n\nexport default toggleSlice.reducer\nexport const {setToggle} = toggleSlice.actions","import {configureStore, combineReducers} from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/CounterSlice';\nimport categoriesReducer from '../features/categories/CategoriesSlice';\nimport budgetsReducer from '../features/budgets/BudgetsSlice';\nimport expensesReducer from '../features/expenses/ExpensesSlice';\nimport userReducer from '../features/user/UserSlice';\nimport toggleReducer from '../features/auth/ToggleSlice'\n// added after installing redux-persist\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst rootReducer = combineReducers({ \n    counter: counterReducer,\n    categories: categoriesReducer,\n    budgets: budgetsReducer,\n    expenses: expensesReducer,\n    user: userReducer,\n    toggle: toggleReducer\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk] // might not need\n})\n\n\n\n// export const store = configureStore({\n//     reducer: {\n//         counter: counterReducer,\n//         categories: categoriesReducer,\n//         expenses: expensesReducer,\n//         auth: authReducer,\n//         user: userReducer\n//     }\n// })\n\nexport const persistor = persistStore(store)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { persistor ,store } from './redux/store';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport './bootstrap.min.css';\n\n// import store, wrap App inside Provide and pass store in as prop\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}